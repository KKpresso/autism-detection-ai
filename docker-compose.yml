version: '3.8'

services:
  api:
    build:
      context: .
      target: ${DEPLOYMENT_TARGET:-cpu}  # Use gpu or cpu
    ports:
      - "8000:8000"  # FastAPI
      - "8001:8001"  # Prometheus metrics
    volumes:
      - ./models:/app/models
      - ./cache:/app/cache
    environment:
      - MODEL_PATH=/app/models/best_model.pt
      - CACHE_DIR=/app/cache
      - NUM_WORKERS=4
      - MAX_CACHE_SIZE_GB=50
      - CUDA_VISIBLE_DEVICES=${CUDA_VISIBLE_DEVICES:-}  # For GPU deployment
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
      restart_policy:
        condition: on-failure
        max_attempts: 3
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  prometheus:
    image: prom/prometheus:v2.30.3
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

  grafana:
    image: grafana/grafana:8.2.2
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    depends_on:
      - prometheus

volumes:
  grafana_data:
